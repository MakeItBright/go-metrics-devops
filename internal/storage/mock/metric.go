// Code generated by MockGen. DO NOT EDIT.
// Source: ../metric.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/MakeItBright/go-metrics-devops/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockMetricStorage is a mock of Metric interface.
type MockMetricStorage struct {
	ctrl     *gomock.Controller
	recorder *MockMetricStorageMockRecorder
}

// MockMetricStorageMockRecorder is the mock recorder for MockMetricStorage.
type MockMetricStorageMockRecorder struct {
	mock *MockMetricStorage
}

// NewMockMetricStorage creates a new mock instance.
func NewMockMetricStorage(ctrl *gomock.Controller) *MockMetricStorage {
	mock := &MockMetricStorage{ctrl: ctrl}
	mock.recorder = &MockMetricStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricStorage) EXPECT() *MockMetricStorageMockRecorder {
	return m.recorder
}

// MetricAll mocks base method.
func (m *MockMetricStorage) MetricAll() map[model.MetricPath]model.Metric {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricAll")
	ret0, _ := ret[0].(map[model.MetricPath]model.Metric)
	return ret0
}

// MetricAll indicates an expected call of MetricAll.
func (mr *MockMetricStorageMockRecorder) MetricAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricAll", reflect.TypeOf((*MockMetricStorage)(nil).MetricAll))
}

// MetricFetch mocks base method.
func (m *MockMetricStorage) MetricFetch(arg0 context.Context, arg1 model.MetricType, arg2 model.MetricName) (model.Metric, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricFetch", arg0, arg1, arg2)
	ret0, _ := ret[0].(model.Metric)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MetricFetch indicates an expected call of MetricFetch.
func (mr *MockMetricStorageMockRecorder) MetricFetch(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricFetch", reflect.TypeOf((*MockMetricStorage)(nil).MetricFetch), arg0, arg1, arg2)
}

// MetricStore mocks base method.
func (m *MockMetricStorage) MetricStore(arg0 context.Context, arg1 model.Metric) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MetricStore", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// MetricStore indicates an expected call of MetricStore.
func (mr *MockMetricStorageMockRecorder) MetricStore(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MetricStore", reflect.TypeOf((*MockMetricStorage)(nil).MetricStore), arg0, arg1)
}
